name: Replace Blog Images

on:
  workflow_dispatch:

jobs:
  replace:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Copy images from replace_images/ to assets/blog/
        run: |
          mkdir -p assets/blog
          if [ -d replace_images ]; then
            cp -f replace_images/* assets/blog/ || true
          else
            echo 'No replace_images/ folder found. Add files to replace_images/ and re-run.'
            exit 1
          fi

      - name: Update alt text from IMAGES_MAP.json (optional)
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');
          const candidates = ['IMAGES_MAP.json', path.join('replace_images','IMAGES_MAP.json')];
          let mapFile = null;
          for (const p of candidates){ if (fs.existsSync(p)) { mapFile = p; break; } }
          if (!mapFile) { console.log('No IMAGES_MAP.json found; skipping alt updates.'); process.exit(0); }
          const map = JSON.parse(fs.readFileSync(mapFile, 'utf-8'));
          const blogIndex = 'blog/index.html';
          if (!fs.existsSync(blogIndex)) { console.error('blog/index.html not found; skipping.'); process.exit(0); }
          let html = fs.readFileSync(blogIndex, 'utf-8');
          for (const [slug, alt] of Object.entries(map)) {
            const re = new RegExp(`(<article id=\"${slug}\"[\\s\\S]*?<img[^>]+alt=\")(.*?)(\")`, 'i');
            html = html.replace(re, `$1${alt}$3`);
          }
          fs.writeFileSync(blogIndex, html);
          NODE

      - name: Commit & push
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore(blog): replace images and alt text"
            git push
          else
            echo 'No changes'
          fi
